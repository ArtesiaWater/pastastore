name: pastastore

on:
  # Trigger the workflow on push or pull request on master,
  # and only on pull-requests on dev branch
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master
      - dev

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9
          cache: "pip"
          cache-dependency-path: pyproject.toml

      - name: Install Python dependencies
        run: |
          pip install .
          pip install ".[lint]"

      - name: Run black
        uses: psf/black@stable
        with:
          options: "--check --diff"
          jupyter: true

      - name: Run isort
        run: |
          isort --check --diff --profile=black ./pastastore

      - name: Run flake8
        run: |
          flake8 --count --show-source --exit-zero --max-line-length=88 ./pastastore
          flake8 --count --exit-zero --max-line-length=88 --statistics ./pastastore

  test:
    name: Tests
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
        pastas-version:
          [
            "git+https://github.com/pastas/pastas.git@v0.22.0",
            "git+https://github.com/pastas/pastas.git@v0.23.1",
            "git+https://github.com/pastas/pastas.git@v1.0.1",
            "git+https://github.com/pastas/pastas.git@v1.4.0",
            "git+https://github.com/pastas/pastas.git@dev",
          ]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: pyproject.toml

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install ${{ matrix.pastas-version }}
          pip install -e .[test]

      - name: Run pytest
        run: |
          pytest -m "not bgmap"

      - name: Test backgroundmap once
        if: ${{ matrix.python-version == '3.9' && matrix.pastas-version == 'git+https://github.com/pastas/pastas.git@dev' }}
        run: |
          pytest -m "bgmap"

      - name: Run codacy-coverage-reporter
        if: ${{ github.repository == 'pastas/pastastore' && success() }}
        uses: codacy/codacy-coverage-reporter-action@master
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage.xml
